class Solution 
{
public:
    int removeElement(vector<int>& nums, int val)     //vector对象实体，容纳许多其他类型相同的元素，头文件#include<vector>
    {                                                 //vector<int>& nums 引用nums
     int z=0;                                      
     for(int i=0;i<nums.size();++i)                   //循环
     {
       if(nums[i]!=val)                               //遍历nums，不等于val时候，将指针移动，并加1
       {
         nums[z]=nums[i];
         ++z;
       }
     }
    return z; 
    }
};

如果把条件换成当nums[]=val
class Solution 
{
public:
    int removeElement(vector<int>& nums, int val)    
    {                                                 
     int z=0;                                      
     for(int i=0;i<nums.size();++i)                  
     {
       if(nums[i]==val) 
       continue;
       else
       {                  
       nums[z]=nums[i];
       ++z;
       }
     }
    return z; 
    }
};


输入 1232  val =3
z = 0
i = 0, i< 3
nums0 = 1 != val=3    判断
nums0 = nums0
z=1,i=1
nums1 =2  !=val=3     判断
nums1 = nums1
z=2,i=2
nums2 =3 = val        判断
z=2,i=3
nums3 = 2 !=val
nums2 = nums 3        判断
z=3, i=3
i !<3 输出
z=3
