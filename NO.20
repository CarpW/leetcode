class Solution 
{
public:
    bool isValid(string s)
  {
    stack<char> No20;                                                       //stack<typename> 堆栈（push进，pop出）
    for (int i = 0; i < s.size(); ++i)                                      //循环
    {
     if(s[i] == '(' || s[i] == '[' || s[i] == '{')  
     No20.push(s[i]);                                                       //检测左括号，有则推入堆栈
     else 
     {
      if (No20.empty()) return false;                                       //没有检测到，第一种情况，string为空     
      if (s[i] == ')' && No20.top() != '(') return false;                     
      if (s[i] == ']' && No20.top() != '[') return false;
      if (s[i] == '}' && No20.top() != '{') return false;
      No20.pop();                                                           //弹出栈顶元素
     } 
    } 
    return No20.empty();                                                    //循环完成后，stack为空是，则说明括号都匹配上了
  } 
};    

steps:
遍历数组
暴力遍历就完事了
找到前括号类型将其放入堆栈
暴力遍历完没有遇到可以组合的则都是false


